labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0.05),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 10,
height = 5)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.05)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.05)) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 10,
height = 5)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 10,
height = 5)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.02)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g1
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.02)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 10,
height = 5)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
pdf("../figures/Figure8.pdf",
width = 12,
height = 6)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 12,
height = 6)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
g1 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = chi,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.015)) +
labs(y = expression(chi)) +
scale_color_viridis_d(name = "Cluster") +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
g2 <- ggplot(data = depregime,
mapping = aes(
x = u,
y = eta,
group = cluster,
color = cluster
)) +
geom_point() +
geom_line(linewidth = 1.5) +
scale_y_continuous(
expand = c(0, 0),
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1),
labels = c("0", "0.25", "0.5", "0.75", "1")
) +
scale_x_continuous(expand = c(0, 0.01)) +
scale_color_viridis_d(name = "Cluster") +
labs(y = expression(eta)) +
theme_classic() +
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
pdf("../figures/Figure8.pdf",
width = 12,
height = 6)
g1 + g2 + plot_layout(guides = "collect") &
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
legend.position = "bottom")
dev.off()
setwd(this.path::here())
library(ggplot2)
library(patchwork)
library(mev)
load("../outputs/C4_tstab_proptbl.RData")
setwd(this.path::here())
library(ggplot2)
library(patchwork)
library(mev)
set.seed(2023)
qlev <- qgev(seq(0.8, 0.99, by = 0.01), 1,1,1)
d <- 8
nmixt <- 100
pars <- seq(0.4, 0.9, length.out = nmixt)
nsim <- 1e6
nobs <- nsim / nmixt
prop_tbl <- matrix(0, nrow = length(qlev), ncol = nmixt)
for (nrep in 1:1000) {
samp <- matrix(NA, nrow = nsim, ncol = d)
for (i in seq_along(pars)) {
samp[(i - 1) * nobs + 1:nobs, ] <- rmev(
n = nobs,
d = d,
model = "log",
param = pars[i]
)
}
for (j in seq_along(qlev)) {
prop_tbl[j, ] <- prop_tbl[j, ]  + table(factor(ceiling(which(
apply(samp, 1, max) > qlev[j]
) / nobs),
levels = 1:nmixt),
exclude = FALSE)
}
}
setwd(this.path::here())
library(ggplot2)
library(patchwork)
library(mev)
set.seed(2023)
qlev <- qgev(seq(0.8, 0.99, by = 0.01), 1,1,1)
d <- 8
nmixt <- 100
pars <- seq(0.4, 0.9, length.out = nmixt)
nsim <- 1e6
nobs <- nsim / nmixt
prop_tbl <- matrix(0, nrow = length(qlev), ncol = nmixt)
load("../outputs/C4_tstab_proptbl.RData")
df1 <- data.frame(
pars = c(pars, pars, pars),
prop = c(prop_tbl[1,], prop_tbl[11,], prop_tbl[16,]),
thresh = factor(rep(c("0.8", "0.9", "0.95"), each = length(pars))))
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "quantile level",
subtitle = "proportion of exceedances (%)") +
theme_classic() +
theme(legend.position = c(0.8, 0.2))
g2 <- ggplot(data = data.frame(thresh = results$log[, 'threshold'],
results$log[, c('coef', 'lower', 'upper')]),
mapping = aes(x = thresh, y = coef, ymin = lower, ymax = upper)) +
geom_pointrange(fatten = 1) +
scale_x_continuous(breaks = seq(0.9, 1, by = 0.025),
labels = c("0.9", "0.925", "0.95", "0.975", "1")) +
labs(x = "quantile level",
y = "",
subtitle = expression("logistic dependence parameter " * alpha)) +
theme_classic()
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE)
g1
ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "quantile level",
subtitle = "proportion of exceedances (%)") +
theme_classic() +
theme(legend.position = c(0.8, 0.2))
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme_classic() +
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
plot.title = element_text(size=20),
legend.position = c(0.8, 0.2))
g1
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme_classic() +
theme(legend.text = element_text(size=50),
legend.title = element_text(size=50),
plot.title = element_text(size=50),
legend.position = c(0.8, 0.2))
g1
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
plot.title = element_text(size=20),
legend.position = c(0.8, 0.2)) +
theme_classic()
g1
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme(legend.text = element_text(size=50),
legend.title = element_text(size=20),
plot.title = element_text(size=50),
legend.position = c(0.8, 0.2)) +
theme_classic()
g1
ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE)
ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)")
ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
plot.title = element_text(size=20),
legend.position = c(0.8, 0.2))
df1 <- data.frame(
pars = c(pars, pars, pars),
prop = c(prop_tbl[1,], prop_tbl[11,], prop_tbl[16,]),
thresh = factor(rep(c("0.8", "0.9", "0.95"), each = length(pars))))
g1 <- ggplot(data = df1,
mapping = aes(x = pars, y = prop*100, col = thresh)) +
geom_hline(yintercept = 1) +
geom_smooth(method = "gam", se = FALSE, formula = y ~ s(x), show.legend = FALSE) +
# geom_point() +
scale_color_grey() +
labs(x = expression(alpha),
y = "",
color = "Quantile level",
subtitle = "Proportion of exceedances (%)") +
theme(legend.text = element_text(size=20),
legend.title = element_text(size=20),
plot.title = element_text(size=20),
legend.position = c(0.8, 0.2)) +
theme_classic()
g2 <- ggplot(data = data.frame(thresh = results$log[, 'threshold'],
results$log[, c('coef', 'lower', 'upper')]),
mapping = aes(x = thresh, y = coef, ymin = lower, ymax = upper)) +
geom_pointrange(fatten = 1) +
scale_x_continuous(breaks = seq(0.9, 1, by = 0.025),
labels = c("0.9", "0.925", "0.95", "0.975", "1")) +
labs(x = "Quantile level",
y = "",
subtitle = expression("Logistic dependence parameter " * alpha)) +
theme_classic()
